Outside notes:
http://capstone.cs.ucsb.edu/team_docs_13/SRS/SRS_NullTerminators.pdf
http://try.github.io/levels/1/challenges/2

3. Specific requirements
	
	
3.1 External interface requirements
		
			
3.1.1 User interfaces
				
				
3.1.1.1 A user interface for course selection which includes:
					
						
3.1.1.1.1 Overall page frame similar to current LORIS system http://telaris.wlu.ca
						
3.1.1.1.2 A term selection dropdown
						
3.1.1.1.3 A guided course search system with three tabs
							
								
3.1.1.1.3.1 "Manual" which provides a narrowing course selection process finalizing with a description as the user clicks on each class
								
3.1.1.1.3.2 "Course" which provides a search functionality with descriptions
								
3.1.1.1.3.3 "CRN" which provides a system similar to the current system that can be found here.
							 						
3.1.1.1.4 Two persistent buttons are located below the search systems
								
									
3.1.1.1.4.1 "Add to Worksheet" which adds to the users worksheet
									
3.1.1.1.4.2 "Register Course" which adds to the users registered courses
								 						
3.1.1.1.5 A schedule view with the heading "Schedule View"
								
									
3.1.1.1.5.1 A weekly calendar view
										
											
3.1.1.1.5.1.1 Displays registered classes in the weekly calendar view
											
3.1.1.1.5.1.2 Displays classes added to the "schedule viewer" in the weekly calendar view
										 									
3.1.1.1.5.2 "Worksheet" which has a list of courses that the student is interested in
									
3.1.1.1.5.3 "Schedule Viewer" which as both a list of courses that the student is registered in and courses that the student would like to preview
										
											
3.1.1.1.5.3.1 Note: Classes that overlap in terms of timetable will show up a different colour on the calendar view.
										 								 					 				 			
3.1.2 Hardware interfaces
				
					
The system will be located on the Wilfrid Laurier University Computer Science server Hopper. Clients will access the content from their home or university computers through the internet.
				 			 			
3.1.3 Software interfaces
				
					
3.1.3.1 At this time software requirements beyond being capable of compiling and running on hopper have not been fully discussed. The following is a list of topics covered thus far.
					
						
3.1.3.1.1 Git repository at https://github.com/CP317-2013/LorisPlus
						
3.1.3.1.2 UML created by Magic Draw
						
3.1.3.1.3 PHP and JAVA have been discussed as possible languages for production
						
3.1.3.1.4 Google docs and Facebook are being used for group organization as well as communication
					 				 			
3.1.4 Communications interfaces
				
					
N/A
				 		 	 	 	
		
3.2 System features
		
			
3.2.1 System Feature 1
			
				
3.2.1.1 Introduction/Purpose
				
3.2.1.2 Stimulus/Response Sequence
				
3.2.1.3 Associated functional requirements
3.2.1.3.1 Functional Requirement 1 (1-n need separate headings)
3.2.1 Schedule View
			
				
3.2.1.1 Introduction/Purpose
The system shall provide users with a visual display of their weekly schedule, or a potential schedule from courses placed by the user into the schedule viewer
				
3.2.1.2 Stimulus/Response Sequence
The user will select to view either their current schedule or a potential one
If their current schedule is selected, a weekly schedule of all the user’s currently registered courses will be displayed
If the potential schedule is selected, a weekly schedule of all the user’s registered courses, and all courses the user has added to the schedule viewer box will be displayed
				
3.2.1.3 Associated functional requirements
The system shall retrieve the user’s registered courses for the selected term from the appropriate database
The system shall store courses selected by the user to move to schedule viewer
The system shall process the details of these courses to generate a visual representation of the user’s schedule
The system will not modify the data of these courses when generating the display

3.2.2 Class Lookup by Filtering
			
				
3.2.2.1 Introduction/Purpose
In order to allow users to browse possible courses to register in, the system shall provide a list of courses filtered according to the user’s selection, and provide information on each course shown
				
3.2.2.2 Stimulus/Response Sequence
the user shall select which filters to apply to the courses they wish to view, the system shall then apply these filters to search through a database of courses and display a list of those which meet the criteria specified. 
The user will then be able to select a course from the list to see detailed information, such as a description, prerequisite courses etc. along with buttons allowing them to add the course to their worksheet or register immediately
				
3.2.2.3 Associated functional requirements
The system shall access a database of courses and generate a list of all which meet the user specified criteria
The system shall 

	 				 			 		 	 	 	
3.2.9 Delete existing course
	3.2.9.1 Priority: Medium
	3.2.9.2 Description: Removes a course from the database.
	3.2.9.3 Response to abnormal situations: 
		3.2.9.3.1 Overflow: 
Not applicable as courses are removed with the same search feature as the user has to add a course
3.2.9.3.2 Error handling:
			Displays error message to administrator with no change to the database
3.2.9.4 Limitations: 
If and only if no student is registered for classes. Otherwise deregister students
If and only if the course exists in the database
3.2.A Admin login
	3.2.A.1 Priority: High
	3.2.A.2 Description: Allows the Administrator to login from the same page as a user
	3.2.A.3 Response to abnormal situations: 
		3.2.A.3.1 Overflow: 
Not applicable
		3.2.A.2 Error handling:
			Displays error message to administrator with no change to the database
	3.2.A.4 Limitations: 
Administrators may only login if they exist.
3.2.B Modify Existing Course
	3.2.B.1 Priority: Medium
	3.2.B.2 Description: Modifies a course in the database.
	3.2.B.3 Response to abnormal situations: 
		3.2.B.3.1 Overflow: 
The course is locked in the database and cannot be registered while the course is being modified. 
		3.2.B.3.2 Error handling:
If the course is modified while a student is in the process of registering the student receives an error and the students courses do not change. (no additions)
	3.2.B.4 Limitations: 
Only available on courses currently in the database and not during the registration process
3.2.C Add New Course
	3.2.C.1 Priority: High
	3.2.C.2 Description: Adds a course in the database.
	3.2.C.3 Response to abnormal situations: 
		3.2.C.3.1 Overflow: 
You cannot add two of the same class with the same CRN or course code
		3.2.C.3.2 Error handling:
If the same course or the same CRN is added the administrator is informed with an error message and no changes occur with the database.
	3.2.C.4 Limitations: 
Can only add new classes that are not currently represented in the database

3.2.D Create user (student)
	3.2.D.1 Priority: High
	3.2.D.2 Description: Allows administrators to create users
3.2.D.3 Response to abnormal situations: 
		3.2.D.3.1 Overflow: 
If two users exist cause error with no changes to the database
		3.2.D.3.2 Error handling:
			No two users may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.D.4 Limitations: 
Administrators may only add new users

3.2.E Create Administrator 
	3.2.E.1 Priority: Medium
	3.2.E.2 Description: Allows administrators to create other administrators
	3.2.E.3 Response to abnormal situations: 
		3.2.E.3.1 Overflow: 
If two administrators exist cause error with no changes to the database
		3.2.E.3.2 Error handling:
			No two administrators may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.E.4 Limitations: 
Administrators may only add new administrators and cannot promote users

3.2.F Remove user (student)
	3.2.F.1 Priority: Medium
	3.2.F.2 Description: Allows administrators to remove users
	3.2.F.3 Response to abnormal situations: 
		3.2.F.3.1 Overflow: 
Administrators shall not remove a user that does not exist
		3.2.F.3.2 Error handling:
			If an administrator attempts to remove a user that does not exist an error is displayed and no change is made to the database
	3.2.F.4 Limitations: 
Users may not remove other users

3.2.G Remove Administrator
	3.2.G.1 Priority: Low
	3.2.G.2 Description: Allows administrators to remove administrators
	3.2.G.3 Response to abnormal situations: 
		3.2.G.3.1 Overflow: 
Administrators may not remove themselves
The only administrator may not remove themselves
		3.2.G.3.2 Error handling:
			No two users may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.G.4 Limitations: 
Administrators may only remove other administrators if there is more than one administrator.
3.3 Performance requirements				
3.3.1 The system shall accept input from a maximum of 2 program majors at one time during the fall registration process
3.3.2 System response time shall be no longer than 1 second under optimal conditions and 5 seconds under heavy load (e.g. Fall course registration)
3.3.3 The system shall lock a class in the database when added to the schedule viewer until the user logs out or until the session expires.	
3.4 Design constraints		
3.4.1 The system shall run on a modern desktop browser (e.g. Chrome 24, FireFox 24, Internet Explorer 10, etc.)
		 	 	 			
3.5 Software system attributes	
3.5.1 Reliability
The system shall maintain stability
The system shall protect all course registration data from unwanted or accidental modification
3.5.2 Availability
Course registration shall be available during fall term in accordance with the current major registration and restriction schedule. (e.g. Computer Science 3rd year register after 4th year Computer Science students.)
3.5.3 Security
The user login credentials shall be salted and hashed per industry standard
An user must not be able to view, change, modify other users information
An user shall not be able to impersonate an administrator and vice versa
		 	 	 	
		
3.6 Other requirements
		
				
3.6.1 Must improve on the current LORIS course registration process
3.6.2 Must have easily understood user interface
		

Features to divide and write:




not
Page is displayed
Login page is displayed
Can register for class


From the use cases

USER:
View schedule
	Display student schedule
Display prospective schedule from the schedule viewer box
Class lookup 1
	Select term
	Add to worksheet
Add to schedule viewer
Register class
Class lookup 2
	Select term
	Add to worksheet
Add to schedule viewer
Register class
Class lookup 3 (CRN)
	Select term
	Add to worksheet
Add to schedule viewer
Register class
Remove Course
	Remove from worksheet
Remove from Schedule viewer
	De-register class
Student Login
	Login as user

Administrator:
3.2.9 Delete existing course
	3.2.9.1 Priority: Medium
	3.2.9.2 Description: Removes a course from the database.
	3.2.9.3 Response to abnormal situations: 
		3.2.9.3.1 Overflow: 
Not applicable as courses are removed with the same search feature as the user has to add a course
3.2.9.3.2 Error handling:
			Displays error message to administrator with no change to the database
3.2.9.4 Limitations: 
If and only if no student is registered for classes. Otherwise deregister students
If and only if the course exists in the database
3.2.A Admin login
	3.2.A.1 Priority: High
	3.2.A.2 Description: Allows the Administrator to login from the same page as a user
	3.2.A.3 Response to abnormal situations: 
		3.2.A.3.1 Overflow: 
Not applicable
		3.2.A.2 Error handling:
			Displays error message to administrator with no change to the database
	3.2.A.4 Limitations: 
Administrators may only login if they exist.
3.2.B Modify Existing Course
	3.2.B.1 Priority: Medium
	3.2.B.2 Description: Modifies a course in the database.
	3.2.B.3 Response to abnormal situations: 
		3.2.B.3.1 Overflow: 
The course is locked in the database and cannot be registered while the course is being modified. 
		3.2.B.3.2 Error handling:
If the course is modified while a student is in the process of registering the student receives an error and the students courses do not change. (no additions)
	3.2.B.4 Limitations: 
Only available on courses currently in the database and not during the registration process
3.2.C Add New Course
	3.2.C.1 Priority: High
	3.2.C.2 Description: Adds a course in the database.
	3.2.C.3 Response to abnormal situations: 
		3.2.C.3.1 Overflow: 
You cannot add two of the same class with the same CRN or course code
		3.2.C.3.2 Error handling:
If the same course or the same CRN is added the administrator is informed with an error message and no changes occur with the database.
	3.2.C.4 Limitations: 
Can only add new classes that are not currently represented in the database

3.2.D Create user (student)
	3.2.D.1 Priority: High
	3.2.D.2 Description: Allows administrators to create users
3.2.D.3 Response to abnormal situations: 
		3.2.D.3.1 Overflow: 
If two users exist cause error with no changes to the database
		3.2.D.3.2 Error handling:
			No two users may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.D.4 Limitations: 
Administrators may only add new users

3.2.E Create Administrator 
	3.2.E.1 Priority: Medium
	3.2.E.2 Description: Allows administrators to create other administrators
	3.2.E.3 Response to abnormal situations: 
		3.2.E.3.1 Overflow: 
If two administrators exist cause error with no changes to the database
		3.2.E.3.2 Error handling:
			No two administrators may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.E.4 Limitations: 
Administrators may only add new administrators and cannot promote users

3.2.F Remove user (student)
	3.2.F.1 Priority: Medium
	3.2.F.2 Description: Allows administrators to remove users
	3.2.F.3 Response to abnormal situations: 
		3.2.F.3.1 Overflow: 
Administrators shall not remove a user that does not exist
		3.2.F.3.2 Error handling:
			If an administrator attempts to remove a user that does not exist an error is displayed and no change is made to the database
	3.2.F.4 Limitations: 
Users may not remove other users

3.2.G Remove Administrator
	3.2.G.1 Priority: Low
	3.2.G.2 Description: Allows administrators to remove administrators
	3.2.G.3 Response to abnormal situations: 
		3.2.G.3.1 Overflow: 
Administrators may not remove themselves
The only administrator may not remove themselves
		3.2.G.3.2 Error handling:
			No two users may have the same ID. If an administrator attempts to add a user with the same ID an error is displayed with no change to the database
	3.2.G.4 Limitations: 
Administrators may only remove other administrators if there is more than one administrator.
